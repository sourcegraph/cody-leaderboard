 question: \@zoekt describe my code.
# CHAT
# CHAT_QUESTION \@zoekt describe my code.

# CHAT_REPLY The code you provided implements a rate limiter for a Cody agent. It includes:
# CHAT_REPLY 
# CHAT_REPLY **1. RateLimit struct:**
# CHAT_REPLY - Defines the rate limit configuration, including:
# CHAT_REPLY     - `AllowedModels`: A list of allowed models for the agent.
# CHAT_REPLY     - `Limit`: The maximum number of requests allowed within the interval.
# CHAT_REPLY     - `Interval`: The time interval for the rate limit.
# CHAT_REPLY     - `ConcurrentRequests`: The maximum number of concurrent requests allowed.
# CHAT_REPLY     - `ConcurrentRequestsInterval`: The time interval for the concurrency limit.
# CHAT_REPLY 
# CHAT_REPLY **2. NewRateLimitWithPercentageConcurrency function:**
# CHAT_REPLY - Creates a new RateLimit instance with a concurrency limit based on a percentage of the daily rate limit.
# CHAT_REPLY 
# CHAT_REPLY **3. IsValid function:**
# CHAT_REPLY - Checks if the RateLimit instance is valid.
# CHAT_REPLY 
# CHAT_REPLY **4. EvaluateAllowedModels function:**
# CHAT_REPLY - Evaluates the allowed models based on a master allowlist and the actor's allowlist.
# CHAT_REPLY 
# CHAT_REPLY **5. concurrencyLimiter struct:**
# CHAT_REPLY - Implements a concurrency limiter using a Redis store.
# CHAT_REPLY - Uses a static limiter to enforce the concurrency limit.
# CHAT_REPLY - Provides a TryAcquire method to acquire a permit for a concurrent request.
# CHAT_REPLY - Provides a Usage method to get the current usage of the concurrency limiter.
# CHAT_REPLY 
# CHAT_REPLY **6. ErrConcurrencyLimitExceeded struct:**
# CHAT_REPLY - Represents an error indicating that the concurrency limit has been exceeded.
# CHAT_REPLY - Provides methods for generating error messages and writing a response to the client.
# CHAT_REPLY 
# CHAT_REPLY **7. updateOnErrorLimiter struct:**
# CHAT_REPLY - Wraps a limiter and updates the actor on access errors.
# CHAT_REPLY - This allows the actor to be updated if their access has changed.
# CHAT_REPLY 
# CHAT_REPLY **8. IsErrActorRecentlyUpdated function:**
# CHAT_REPLY - Checks if an error is due to the actor being recently updated.
# CHAT_REPLY 
# CHAT_REPLY **Overall, the code implements a robust rate limiting mechanism for a Cody agent, ensuring that the agent does not exceed its allocated resources.**
# CHAT_REPLY 
# CHAT_REPLY **Note:** The code also uses the `github.com/sourcegraph/log` package for logging, the `go.opentelemetry.io/otel/trace` package for tracing, and the `github.com/sourcegraph/sourcegraph/cmd/cody-gateway/internal/limiter` package for rate limiting functionality.

 class: codebase onboarding
 files:
   - ../mocked/enhanced_context/squirrel.ts
   - ../mocked/enhanced_context/animal.ts
   - ../mocked/enhanced_context/agent.go
   - ../mocked/enhanced_context/limit.go
   - ../mocked/enhanced_context/README.md
 
