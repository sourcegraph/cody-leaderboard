 question: describe my code
# CHAT
# CHAT_QUESTION describe my code

# CHAT_REPLY Based on the provided codebase context, I can describe the following:
# CHAT_REPLY 
# CHAT_REPLY 1. **README.md**:
# CHAT_REPLY    - This file provides an overview of the Zoekt project, which is a fast text search engine intended for use with source code.
# CHAT_REPLY    - It includes instructions for downloading, indexing, and searching using Zoekt.
# CHAT_REPLY    - It also mentions support for symbol search using Universal ctags and acknowledges the creators of Zoekt.
# CHAT_REPLY    - The file mentions that this is a fork of the original Google Zoekt repository and is now the main maintained source.
# CHAT_REPLY 
# CHAT_REPLY 2. **eval.go**:
# CHAT_REPLY    - This Go file contains the core functionality for searching and evaluating queries in Zoekt.
# CHAT_REPLY    - It defines functions for simplifying queries, setting default search options, and performing the actual search.
# CHAT_REPLY    - The `Search` function takes a query and search options, and returns a `SearchResult` containing the matched files, line matches, and various statistics.
# CHAT_REPLY    - It includes logic for gathering matches, scoring files, handling branches, and simplifying queries based on repository metadata.
# CHAT_REPLY 
# CHAT_REPLY 3. **limit.go**:
# CHAT_REPLY    - This file contains functions for sorting, truncating, and limiting the search results based on the provided search options.
# CHAT_REPLY    - The `SortAndTruncateFiles` function sorts the file matches and then truncates them based on the specified limits.
# CHAT_REPLY    - The `NewDisplayTruncator` function creates a `DisplayTruncator`, which is a stateful function that enforces document and match display limits by truncating the results.
# CHAT_REPLY    - The `limitMatches`, `limitChunkMatches`, and `limitLineMatches` functions are responsible for limiting the number of chunk matches and line matches in the search results.
# CHAT_REPLY 
# CHAT_REPLY 4. **vscode/src/external-services.ts**:
# CHAT_REPLY    - This TypeScript file appears to be part of a Visual Studio Code extension or project.
# CHAT_REPLY    - However, the provided context does not include any meaningful code from this file, so I cannot provide any further description.
# CHAT_REPLY 
# CHAT_REPLY Please note that without the complete codebase context, my ability to describe the code is limited to the provided snippets.

 files:
   - ../mocked/codebase_context/README.md
   - ../mocked/codebase_context/eval.go
   - ../mocked/codebase_context/limit.go
   - ../mocked/enhanced_context/vscode/src/external-services.ts
 
