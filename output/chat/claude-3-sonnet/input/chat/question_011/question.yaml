 question: What does directory watcher do?
# CHAT
# CHAT_QUESTION What does directory watcher do?

# CHAT_REPLY The DirectoryWatcher is a component that monitors a directory for changes to files with the ".zoekt" extension. It is responsible for loading and unloading shard files (which are likely search index files) based on the modifications detected in the watched directory. Here's a high-level overview of its functionality:
# CHAT_REPLY 
# CHAT_REPLY 1. It scans the directory on initialization and loads any new or updated shard files while unloading any deleted shard files.
# CHAT_REPLY 2. It sets up a filesystem watcher using the `fsnotify` package to monitor the directory for file system events (create, modify, delete).
# CHAT_REPLY 3. When file system events are detected, it triggers a rescan of the directory to load, unload, or reload the appropriate shard files.
# CHAT_REPLY 4. It provides a `WaitUntilReady` method to ensure the initial scan and load are completed before proceeding.
# CHAT_REPLY 5. It can be stopped by calling the `Stop` method, which gracefully shuts down the watcher and stops monitoring the directory.
# CHAT_REPLY 
# CHAT_REPLY The DirectoryWatcher acts as an intermediary between the file system and a `shardLoader` component, which is responsible for actually loading and unloading the shard files. This separation of concerns allows the DirectoryWatcher to focus on monitoring the file system and delegating the loading and unloading of shards to the appropriate component.

 class: code search
 files:
   - ../mocked/enhanced_context/squirrel.ts
   - ../mocked/enhanced_context/animal.ts
   - ../mocked/enhanced_context/agent.go
   - ../mocked/enhanced_context/limit.go
   - ../mocked/enhanced_context/README.md
   - ../mocked/codebase_context/README.md
   - ../mocked/codebase_context/shards/watcher.go
 
