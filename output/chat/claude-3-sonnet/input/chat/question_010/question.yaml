 question: \@zoekt describe my code.
# CHAT
# CHAT_QUESTION \@zoekt describe my code.

# CHAT_REPLY Certainly! Your codebase contains various TypeScript and Go files related to code intelligence, rate limiting, and an agent for interacting with Cody. Here's a brief description of the files:
# CHAT_REPLY 
# CHAT_REPLY 1. `squirrel.ts`: Defines interfaces for a code intelligence API called "Squirrel" and its related types.
# CHAT_REPLY 
# CHAT_REPLY 2. `animal.ts`: Defines a simple interface for an "Animal" with properties like name and age.
# CHAT_REPLY 
# CHAT_REPLY 3. `agent.go`: A Go file that seems to define an "Agent" type, but the content is not provided.
# CHAT_REPLY 
# CHAT_REPLY 4. `limit.go`: A Go file that contains types and functions related to rate limiting and concurrency control for an "Actor" (possibly an AI agent). It defines a `RateLimit` struct with fields like `AllowedModels`, `Limit`, `Interval`, and `ConcurrentRequests`. It also includes error handling and response writing for rate limit exceeded scenarios.
# CHAT_REPLY 
# CHAT_REPLY 5. `README.md`: A Markdown file describing the `@sourcegraph/cody-agent` package, which implements a JSON-RPC server for interacting with Cody (an AI assistant) via stdout/stdin, intended for non-ECMAScript clients like JetBrains and NeoVim plugins.
# CHAT_REPLY 
# CHAT_REPLY Overall, your codebase appears to be related to an AI assistant named Cody, with components for code intelligence, rate limiting, and client interaction.

 class: codebase onboarding
 files:
   - ../mocked/enhanced_context/squirrel.ts
   - ../mocked/enhanced_context/animal.ts
   - ../mocked/enhanced_context/agent.go
   - ../mocked/enhanced_context/limit.go
   - ../mocked/enhanced_context/README.md
 
