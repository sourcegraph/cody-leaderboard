 question: What does directory watcher do?
# CHAT
# CHAT_QUESTION What does directory watcher do?

# CHAT_REPLY The `DirectoryWatcher` in `shards/watcher.go` monitors a directory for changes to Zoekt shard files (`*.zoekt`) and updates the search index accordingly. 
# CHAT_REPLY 
# CHAT_REPLY Here's a breakdown of its functionality:
# CHAT_REPLY 
# CHAT_REPLY 1. **Initialization (`newDirectoryWatcher`):**
# CHAT_REPLY    - Takes the directory path and a `shardLoader` as input.
# CHAT_REPLY    - Starts a goroutine that scans the directory for existing shards and starts watching for changes.
# CHAT_REPLY 
# CHAT_REPLY 2. **Initial Scan (`scan`):**
# CHAT_REPLY    - Discovers all `.zoekt` files in the directory.
# CHAT_REPLY    - Identifies the latest version of each shard based on filename (handles potential downgrades).
# CHAT_REPLY    - Compares timestamps of discovered shards with its internal record.
# CHAT_REPLY    - Instructs the `shardLoader` to load new/updated shards and drop deleted ones.
# CHAT_REPLY 
# CHAT_REPLY 3. **Change Monitoring (`watch`):**
# CHAT_REPLY    - Uses `fsnotify` to watch the directory for file system events.
# CHAT_REPLY    - Triggers a scan whenever a change is detected (e.g., file creation, modification, deletion).
# CHAT_REPLY    - Uses a buffered channel (`signal`) to coalesce multiple events into a single scan.
# CHAT_REPLY 
# CHAT_REPLY 4. **Shard Loading and Unloading (`shardLoader`):**
# CHAT_REPLY    - The `shardLoader` is an interface that defines how to load and unload shards.
# CHAT_REPLY    - `DirectoryWatcher` delegates the actual indexing/unindexing to the provided `shardLoader` implementation.
# CHAT_REPLY 
# CHAT_REPLY 5. **Stopping (`Stop`):**
# CHAT_REPLY    - Closes the `quit` channel, signaling the watcher goroutine to stop.
# CHAT_REPLY    - Waits for the watcher goroutine to finish and close the `stopped` channel.
# CHAT_REPLY 
# CHAT_REPLY In essence, `DirectoryWatcher` acts as a bridge between the file system and the search index, ensuring that the index remains consistent with the contents of the shard directory.

 class: code search
 files:
   - ../mocked/enhanced_context/squirrel.ts
   - ../mocked/enhanced_context/animal.ts
   - ../mocked/enhanced_context/agent.go
   - ../mocked/enhanced_context/limit.go
   - ../mocked/enhanced_context/README.md
   - ../mocked/codebase_context/README.md
   - ../mocked/codebase_context/shards/watcher.go
 
