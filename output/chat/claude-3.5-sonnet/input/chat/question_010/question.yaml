 question: \@zoekt describe my code.
# CHAT
# CHAT_QUESTION \@zoekt describe my code.

# CHAT_REPLY Based on the codebase context provided, your code appears to be a part of a larger system, likely related to Cody, a code intelligence tool developed by Sourcegraph. Here's a high-level overview:
# CHAT_REPLY 
# CHAT_REPLY 1. The codebase includes TypeScript interfaces for code intelligence (Squirrel) and basic data structures (Animal).
# CHAT_REPLY 
# CHAT_REPLY 2. There's a Go package implementing an agent system, with a focus on rate limiting and concurrency control for API access.
# CHAT_REPLY 
# CHAT_REPLY 3. The rate limiting system is sophisticated, allowing for:
# CHAT_REPLY    - Model-specific access controls
# CHAT_REPLY    - Configurable limits and intervals
# CHAT_REPLY    - Concurrent request management
# CHAT_REPLY 
# CHAT_REPLY 4. The code includes error handling for rate limit and concurrency limit exceeded scenarios, with informative HTTP responses.
# CHAT_REPLY 
# CHAT_REPLY 5. There's an adaptive system that can update actor permissions when access issues are encountered.
# CHAT_REPLY 
# CHAT_REPLY 6. The README indicates that there's a JSON-RPC server implementation for non-ECMAScript clients to interact with Cody, targeting platforms like JetBrains and NeoVim.
# CHAT_REPLY 
# CHAT_REPLY Overall, this codebase seems to be a well-structured and feature-rich backend system for managing and controlling access to Cody's code intelligence capabilities, with a focus on scalability and integration with various development environments.

 class: codebase onboarding
 files:
   - ../mocked/enhanced_context/squirrel.ts
   - ../mocked/enhanced_context/animal.ts
   - ../mocked/enhanced_context/agent.go
   - ../mocked/enhanced_context/limit.go
   - ../mocked/enhanced_context/README.md
 
