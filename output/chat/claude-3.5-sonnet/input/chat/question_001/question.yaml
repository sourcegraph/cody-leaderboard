 question: implement a dog class
# CHAT
# CHAT_REPLY Based on the provided codebase context, I can implement a Dog class that adheres to the Animal interface. Here's an implementation:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY class Dog implements Animal {
# CHAT_REPLY     name: string;
# CHAT_REPLY     age: number;
# CHAT_REPLY     breed: string;
# CHAT_REPLY 
# CHAT_REPLY     constructor(name: string, age: number, breed: string) {
# CHAT_REPLY         this.name = name;
# CHAT_REPLY         this.age = age;
# CHAT_REPLY         this.breed = breed;
# CHAT_REPLY     }
# CHAT_REPLY 
# CHAT_REPLY     bark(): void {
# CHAT_REPLY         console.log(`${this.name} says: Woof!`);
# CHAT_REPLY     }
# CHAT_REPLY }
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY This implementation does the following:
# CHAT_REPLY 
# CHAT_REPLY 1. The `Dog` class implements the `Animal` interface, which requires `name` and `age` properties.
# CHAT_REPLY 2. In addition to the required properties, I've added a `breed` property specific to dogs.
# CHAT_REPLY 3. The constructor initializes all three properties.
# CHAT_REPLY 4. I've also added a `bark()` method as a dog-specific behavior.
# CHAT_REPLY 
# CHAT_REPLY You can use this class like this:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY const myDog = new Dog("Buddy", 3, "Labrador");
# CHAT_REPLY console.log(myDog.name); // Output: Buddy
# CHAT_REPLY console.log(myDog.age);  // Output: 3
# CHAT_REPLY console.log(myDog.breed); // Output: Labrador
# CHAT_REPLY myDog.bark(); // Output: Buddy says: Woof!
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY This implementation satisfies the `Animal` interface while adding dog-specific features.

 files:
   - animal.ts
 
