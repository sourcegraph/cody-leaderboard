 question: what does @limit.go do?
# CHAT
# CHAT_QUESTION what does @limit.go do?

# CHAT_REPLY The `limit.go` file in the provided codebase context is part of the `zoekt` package. It primarily deals with sorting and truncating file matches based on specified search options. Here are the key functionalities it provides:
# CHAT_REPLY 
# CHAT_REPLY 1. **Sorting and Truncating Files:**
# CHAT_REPLY    - The `SortAndTruncateFiles` function sorts a list of `FileMatch` objects and then truncates them based on the search options provided.
# CHAT_REPLY 
# CHAT_REPLY 2. **Display Truncator:**
# CHAT_REPLY    - The `DisplayTruncator` type is a function that enforces document and match display limits by truncating and mutating the list of `FileMatch` objects. It returns the truncated list and a boolean indicating whether there are more items to process.
# CHAT_REPLY    - The `NewDisplayTruncator` function creates a `DisplayTruncator` based on the limits specified in the `SearchOptions`. If no limits are specified, it returns a no-op truncator.
# CHAT_REPLY 
# CHAT_REPLY 3. **Limiting Matches:**
# CHAT_REPLY    - The `limitMatches` function limits the number of matches in the given `FileMatch` objects based on the specified limit and whether chunk matches or line matches should be considered.
# CHAT_REPLY    - The `limitChunkMatches` function limits the number of chunk matches in a `FileMatch`, adjusting the content, ranges, and symbol information accordingly.
# CHAT_REPLY    - The `limitLineMatches` function limits the number of line matches in a `FileMatch`, adjusting the line fragments accordingly.
# CHAT_REPLY 
# CHAT_REPLY Overall, the file provides utilities for managing and enforcing display limits on search results, ensuring that the number of documents and matches displayed does not exceed the specified limits.

 files:
   - ../mocked/codebase_context/limit.go
 
