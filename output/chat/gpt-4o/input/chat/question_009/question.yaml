 question: describe my code
# CHAT
# CHAT_QUESTION describe my code

# CHAT_REPLY Based on the provided codebase context, here is a description of the different parts of your code:
# CHAT_REPLY 
# CHAT_REPLY ### `mocked/codebase_context/README.md`
# CHAT_REPLY This file contains documentation for Zoekt, a fast text search engine intended for use with source code. It includes instructions for downloading, indexing, searching, and installing Zoekt. It also provides details about the JSON API, CLI usage, and systemd service configuration. Additionally, it mentions the Sourcegraph-specific fork of Zoekt and lists some differences and enhancements compared to the original Google version.
# CHAT_REPLY 
# CHAT_REPLY ### `mocked/codebase_context/eval.go`
# CHAT_REPLY This Go file is part of the Zoekt search engine. It includes functions for simplifying and evaluating search queries, setting default search options, and performing searches. Key functions include:
# CHAT_REPLY - `simplifyMultiRepo`: Simplifies a query based on repository predicates.
# CHAT_REPLY - `simplify`: Simplifies a query by mapping it to simpler forms.
# CHAT_REPLY - `Search`: Executes a search query with given options and returns search results.
# CHAT_REPLY - `gatherMatches`: Gathers matches from a document, ensuring they are non-overlapping and sorted.
# CHAT_REPLY - `regexpToMatchTreeRecursive`: Converts a regular expression to a match tree for efficient searching.
# CHAT_REPLY 
# CHAT_REPLY ### `mocked/codebase_context/limit.go`
# CHAT_REPLY This Go file provides functions for sorting and truncating search results to enforce display limits. Key functions include:
# CHAT_REPLY - `SortAndTruncateFiles`: Sorts and truncates file matches based on search options.
# CHAT_REPLY - `NewDisplayTruncator`: Creates a function to enforce document and match display limits.
# CHAT_REPLY - `limitMatches`: Limits the number of matches in file matches.
# CHAT_REPLY - `limitChunkMatches`: Limits the number of chunk matches in a file match.
# CHAT_REPLY - `limitLineMatches`: Limits the number of line matches in a file match.
# CHAT_REPLY 
# CHAT_REPLY ### `mocked/enhanced_context/vscode/src/external-services.ts`
# CHAT_REPLY The provided snippet is incomplete, but it appears to be part of a TypeScript file related to external services in a VS Code extension or application. Without more context, it's difficult to provide a detailed description.
# CHAT_REPLY 
# CHAT_REPLY ### Summary
# CHAT_REPLY Your codebase includes a comprehensive search engine (Zoekt) with capabilities for indexing, searching, and managing source code repositories. The Go files (`eval.go` and `limit.go`) handle query evaluation, search execution, and result limiting. The documentation (`README.md`) provides detailed instructions and information about the Zoekt project. The TypeScript file (`external-services.ts`) seems to be related to external services in a VS Code context, but more information is needed for a complete description.

 class: codebase onboarding
 files:
   - ../mocked/codebase_context/README.md
   - ../mocked/codebase_context/eval.go
   - ../mocked/codebase_context/limit.go
   - ../mocked/enhanced_context/vscode/src/external-services.ts
 
