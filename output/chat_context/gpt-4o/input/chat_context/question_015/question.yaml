 question: Where do we choose the context items from different sources?
# CHAT
# CHAT_QUESTION Where do we choose the context items from different sources?

# CHAT_REPLY The selection of context items from different sources appears to be handled in the `context-mixer.ts` file. Specifically, the `GetContextResult` interface and the `ContextSummary` interface suggest that multiple context retrieval strategies are combined into a single proposed context list. The context mixer uses reciprocal rank fusion to rank the order of documents and combines snippets from each retriever into a single list.
# CHAT_REPLY 
# CHAT_REPLY Here is the relevant part from `context-mixer.ts`:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY export interface GetContextResult {
# CHAT_REPLY     context: AutocompleteContextSnippet[]
# CHAT_REPLY     logSummary: ContextSummary
# CHAT_REPLY }
# CHAT_REPLY 
# CHAT_REPLY /**
# CHAT_REPLY  * The context mixer is responsible for combining multiple context retrieval strategies into a
# CHAT_REPLY  * single proposed context list.
# CHAT_REPLY  *
# CHAT_REPLY  * This is done by ranking the order of documents using reciprocal rank fusion and then combining
# CHAT_REPLY  * the snippets from each retriever into a single list using top-k (so we will pick all returned
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY Additionally, the `context-strategy.ts` file defines different context strategies and how they are selected based on configuration:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY export type ContextStrategy =
# CHAT_REPLY     | 'bfg'
# CHAT_REPLY     | 'jaccard-similarity'
# CHAT_REPLY     | 'new-jaccard-similarity'
# CHAT_REPLY     | 'bfg-mixed'
# CHAT_REPLY     | 'local-mixed'
# CHAT_REPLY     | 'none'
# CHAT_REPLY 
# CHAT_REPLY export interface ContextStrategyFactory extends vscode.Disposable {
# CHAT_REPLY     getStrategy(document: vscode.TextDocument): { name: ContextStrategy; retrievers: ContextRetriever[] }
# CHAT_REPLY }
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY The `DefaultContextStrategyFactory` class in the same file implements the logic to get the appropriate strategy and retrievers:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY export class DefaultContextStrategyFactory implements ContextStrategyFactory {
# CHAT_REPLY     private disposables: vscode.Disposable[] = []
# CHAT_REPLY 
# CHAT_REPLY     private localRetriever: ContextRetriever | undefined
# CHAT_REPLY     private graphRetriever: ContextRetriever | undefined
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY In summary, the context items from different sources are chosen and combined using the context mixer and context strategy mechanisms defined in the `context-mixer.ts` and `context-strategy.ts` files.

# CONTEXT_ITEMS [{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/local-context/context-ranking.tsL168-197"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL59-73"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL213-217"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL190-199"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL77-173"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL35-48"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/mentions/urlContextItems.tsL40-68"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/promptEditor/nodes/ContextItemMentionNode.tsL50-52"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/mentions/urlContextItems.tsL7-34"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/mentions/urlContextItems.tsL36-38"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/local-context/context-ranking.tsL199-210"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/local-context/context-ranking.tsL212-226"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/agent/bindings/kotlin/lib/src/main/kotlin/com/sourcegraph/cody/protocol_generated/ContextItemSource.ktL0-6"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/index.tsL26-66"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/webviews/chat/cells/contextCell/ContextCell.tsxL0-27"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/commands/execute/cody.jsonL16-24"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/index.tsL130-167"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/completions/providers/openaicompatible.tsL418-421"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/agent/bindings/kotlin/lib/src/main/kotlin/com/sourcegraph/cody/protocol_generated/ContextItem.ktL22-53"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/edit/input/get-input.tsL396-419"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/prompt/prompt-string.tsL294-320"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/completions/context/context-mixer.tsL0-33"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/edit/input/get-matching-context.tsL0-31"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/completions/context/context-strategy.tsL0-25"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/completions/context/context-mixer.tsL33-61"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/codebase-context/messages.tsL38-88"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/vscode/src/completions/completion-provider-config.tsL55-77"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat_context/cody_test/lib/shared/src/codebase-context/messages.tsL88-121"}]

 class: Find logic
