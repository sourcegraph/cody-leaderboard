 question: Where do we check for completion types?
# CHAT
# CHAT_QUESTION Where do we check for completion types?

# CHAT_REPLY Based on the provided code context, the types of completions seem to be checked in the `cody_test/agent/src/cli/scip-codegen/scip.ts` file. Specifically, there is a union type defined that checks for different types of completions, such as `SingleType`, `ConstantType`, `IntersectionType`, `UnionType`, `WithType`, `StructuralType`, `AnnotatedType`, `ExistentialType`, `UniversalType`, `ByNameType`, `RepeatedType`, `MatchType`, `LambdaType`, `ThisType`, and `SuperType`.
# CHAT_REPLY 
# CHAT_REPLY For example, here's a snippet from that file:
# CHAT_REPLY 
# CHAT_REPLY ```typescript
# CHAT_REPLY export type Type =
# CHAT_REPLY       | {
# CHAT_REPLY               type_ref?: never
# CHAT_REPLY               single_type?: SingleType
# CHAT_REPLY               this_type?: never
# CHAT_REPLY               super_type?: never
# CHAT_REPLY               constant_type?: ConstantType
# CHAT_REPLY               intersection_type?: never
# CHAT_REPLY               union_type?: never
# CHAT_REPLY               with_type?: never
# CHAT_REPLY               structural_type?: never
# CHAT_REPLY               annotated_type?: never
# CHAT_REPLY               existential_type?: never
# CHAT_REPLY               universal_type?: never
# CHAT_REPLY               by_name_type?: never
# CHAT_REPLY               repeated_type?: never
# CHAT_REPLY               match_type?: never
# CHAT_REPLY               lambda_type?: never
# CHAT_REPLY           }
# CHAT_REPLY       | {
# CHAT_REPLY               type_ref?: never
# CHAT_REPLY               single_type?: never
# CHAT_REPLY               this_type?: never
# CHAT_REPLY               super_type?: never
# CHAT_REPLY               constant_type?: never
# CHAT_REPLY               intersection_type?: IntersectionType
# CHAT_REPLY               // ... (other types omitted for brevity)
# CHAT_REPLY ```
# CHAT_REPLY 
# CHAT_REPLY This union type seems to be used to handle different types of completions in the context of the `scip-codegen` module.

# CONTEXT_ITEMS [{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/completions/types.ts:16-33","content":"export interface DocumentContext extends DocumentDependentContext, LinesContext {\n    position: vscode.Position\n    multilineTrigger: string | null\n    multilineTriggerPosition: vscode.Position | null\n    /**\n     * A temporary workaround for the fact that we cannot modify `TextDocument` text.\n     * Having these fields set on a `DocumentContext` means we can still get the full\n     * document text in the `parse-completion` function with the \"virtually\" inserted\n     * completion text.\n     *\n     * TODO(valery): we need a better abstraction that would allow us to mutate\n     * the `TextDocument` text in memory without actually pasting it into the `TextDocument`\n     * and that would not require copy-pasting and modifying the whole document text\n     * on every completion update or new virtual completion creation.\n     */\n    injectedCompletionText?: string\n    positionWithoutInjectedCompletionText?: vscode.Position\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/sourcegraph-api/index.ts:0-2","content":"export type { Message } from './completions/types'\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/types.ts:0-59","content":"import type * as vscode from 'vscode'\n\nimport type { AutocompleteContextSnippet, DocumentContext } from '@sourcegraph/cody-shared'\nimport type { LastInlineCompletionCandidate } from './get-inline-completions'\n\n/**\n * @see vscode.InlineCompletionItem\n */\nexport interface InlineCompletionItem {\n    insertText: string\n    /**\n     * The range to replace.\n     * Must begin and end on the same line.\n     *\n     * Prefer replacements over insertions to provide a better experience when the user deletes typed text.\n     */\n    range?: vscode.Range\n}\n\nexport interface ContextRetrieverOptions {\n    document: vscode.TextDocument\n    position: vscode.Position\n    docContext: DocumentContext\n    hints: {\n        maxChars: number\n        maxMs: number\n    }\n    lastCandidate?: LastInlineCompletionCandidate\n    abortSignal?: AbortSignal\n}\n\n/**\n * Interface for a general purpose retrieval strategy. During the retrieval phase, all retrievers\n * that are outlined in the execution plan will be called concurrently.\n */\nexport interface ContextRetriever extends vscode.Disposable {\n    /**\n     * The identifier of the retriever. Used for logging purposes.\n     */\n    identifier: string\n\n    /**\n     * Start a retrieval processes. Implementers should observe the hints to return the best results\n     * in the available time.\n     *\n     * The client hints signalize _soft_ timeouts. When a hard timeout is reached, the retriever's\n     * results will not be taken into account anymore so it's suggested to return _something_ during\n     * the maxMs time.\n     *\n     * The abortSignal can be used to detect when the completion request becomes invalidated. When\n     * triggered, any further work is ignored so you can stop immediately.\n     */\n    retrieve(options: ContextRetrieverOptions): Promise<AutocompleteContextSnippet[]>\n\n    /**\n     * Return true if the retriever supports the given languageId.\n     */\n    isSupportedForLanguageId(languageId: string): boolean\n}\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2372-2394","content":"                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: SuperType\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2478-2500","content":"                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: AnnotatedType\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/text-processing/process-inline-completions.ts:123-127","content":"interface GetNodeTypesInfoParams {\n    position: Position\n    parseTree?: Tree\n    multilineTriggerPosition: Position | null\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2350-2372","content":"                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: ThisType\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/text-processing/process-inline-completions.ts:129-160","content":"function getNodeTypesInfo(\n    params: GetNodeTypesInfoParams\n): InlineCompletionItemWithAnalytics['nodeTypes'] | undefined {\n    const { position, parseTree, multilineTriggerPosition } = params\n\n    const positionBeforeCursor = asPoint({\n        line: position.line,\n        character: Math.max(0, position.character - 1),\n    })\n\n    if (parseTree) {\n        const captures = getNodeAtCursorAndParents(parseTree.rootNode, positionBeforeCursor)\n\n        if (captures.length > 0) {\n            const [atCursor, ...parents] = captures\n            const lastAncestorOnTheSameLine = findLastAncestorOnTheSameRow(\n                parseTree.rootNode,\n                asPoint(multilineTriggerPosition || position)\n            )\n\n            return {\n                atCursor: atCursor.node.type,\n                parent: parents[0]?.node.type,\n                grandparent: parents[1]?.node.type,\n                greatGrandparent: parents[2]?.node.type,\n                lastAncestorOnTheSameLine: lastAncestorOnTheSameLine?.type,\n            }\n        }\n    }\n\n    return undefined\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2584-2605","content":"                              repeated_type?: never\n                              match_type?: MatchType\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: LambdaType\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:3655-3657","content":"        set types(value: Type[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value)\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2436-2457","content":"                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: WithType\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:3740-3742","content":"        set types(value: Type[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value)\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2457-2478","content":"                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: StructuralType\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:3825-3827","content":"        set types(value: Type[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value)\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2500-2521","content":"                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: ExistentialType\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/sourcegraph-api/completions/types.ts:6-8","content":"interface CompletionEvent extends CompletionResponse {\n    type: 'completion'\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2415-2436","content":"                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: UnionType\n                              with_type?: never\n                              structural_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/sourcegraph-api/completions/types.ts:23-26","content":"export interface CompletionResponse {\n    completion: string\n    stopReason: string\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2521-2542","content":"                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: UniversalType\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/sourcegraph-api/completions/types.ts:39-43","content":"export interface CompletionCallbacks {\n    onChange: (text: string) => void\n    onComplete: () => void\n    onError: (error: Error, statusCode?: number) => void\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2329-2350","content":"                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: SingleType\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/sourcegraph-api/completions/types.ts:28-37","content":"export interface CompletionParameters {\n    fast?: boolean\n    messages: Message[]\n    maxTokensToSample: number\n    temperature?: number\n    stopSequences?: string[]\n    topK?: number\n    topP?: number\n    model?: string\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2563-2584","content":"                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: RepeatedType\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/test-helpers.ts:17-31","content":"export function completion(string: TemplateStringsArray, ...values: unknown[]): CompletionResponse {\n    const raw = dedent(string, ...values)\n    let completion = raw\n\n    const start = raw.indexOf('├')\n    const end = raw.lastIndexOf('┤')\n    if (0 <= start && start <= end) {\n        completion = raw.slice(start + 1, end)\n    }\n\n    return {\n        completion,\n        stopReason: 'unknown',\n    }\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2855-2869","content":"            super_type?: ReturnType<typeof SuperType.prototype.toObject>\n            constant_type?: ReturnType<typeof ConstantType.prototype.toObject>\n            intersection_type?: ReturnType<typeof IntersectionType.prototype.toObject>\n            union_type?: ReturnType<typeof UnionType.prototype.toObject>\n            with_type?: ReturnType<typeof WithType.prototype.toObject>\n            structural_type?: ReturnType<typeof StructuralType.prototype.toObject>\n            annotated_type?: ReturnType<typeof AnnotatedType.prototype.toObject>\n            existential_type?: ReturnType<typeof ExistentialType.prototype.toObject>\n            universal_type?: ReturnType<typeof UniversalType.prototype.toObject>\n            by_name_type?: ReturnType<typeof ByNameType.prototype.toObject>\n            repeated_type?: ReturnType<typeof RepeatedType.prototype.toObject>\n            match_type?: ReturnType<typeof MatchType.prototype.toObject>\n            lambda_type?: ReturnType<typeof LambdaType.prototype.toObject>\n        }): Type {\n"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/providers/get-completion-params.ts:10-13","content":"interface LineNumberDependentCompletionParamsByType {\n    singlelineParams: LineNumberDependentCompletionParams\n    multilineParams: LineNumberDependentCompletionParams\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2542-2563","content":"                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: ByNameType\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/agent/src/cli/scip-codegen/scip.ts:2394-2415","content":"                              super_type?: never\n                              constant_type?: ConstantType\n                              intersection_type?: never\n                              union_type?: never\n                              with_type?: never\n                              structural_type?: never\n                              annotated_type?: never\n                              existential_type?: never\n                              universal_type?: never\n                              by_name_type?: never\n                              repeated_type?: never\n                              match_type?: never\n                              lambda_type?: never\n                          }\n                      | {\n                              type_ref?: never\n                              single_type?: never\n                              this_type?: never\n                              super_type?: never\n                              constant_type?: never\n                              intersection_type?: IntersectionType\n"}]

 class: Find logic
