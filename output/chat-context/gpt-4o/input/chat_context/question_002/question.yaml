 question: What different context ranking logics are implemented in Cody?
# CHAT
# CHAT_QUESTION What different context ranking logics are implemented in Cody?

# CHAT_REPLY Based on the provided codebase context, Cody implements different context ranking logics, specifically:
# CHAT_REPLY 
# CHAT_REPLY 1. **Feature-Based Context Ranking**:
# CHAT_REPLY    - **Initialization**: The context ranking service is initialized with an index path and access token.
# CHAT_REPLY    - **Feature Computation**: Features are computed for a given repository path to aid in context ranking.
# CHAT_REPLY    - **Context Item Ranking**: Context items are ranked based on a query and the computed features. The ranking is done by converting context items to a format suitable for the ranking service, sending a request to rank the items, and then reordering the context items based on the ranking predictions.
# CHAT_REPLY 
# CHAT_REPLY 2. **Embedding-Based Context Ranking**:
# CHAT_REPLY    - **Embedding Retrieval**: Context items are retrieved based on embeddings. This involves querying an embedding model with a specific query and retrieving a set number of results.
# CHAT_REPLY    - **Precomputation of Embeddings**: Embeddings for a query can be precomputed to speed up future retrievals.
# CHAT_REPLY    - **Model-Specific Embeddings Search**: A specific model is used to search for embeddings, which are then used to retrieve context items.
# CHAT_REPLY 
# CHAT_REPLY ### Detailed Breakdown:
# CHAT_REPLY 
# CHAT_REPLY 1. **Feature-Based Context Ranking**:
# CHAT_REPLY    - **Initialization**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      service.request('context-ranking/initialize', {
# CHAT_REPLY          indexPath: indexPath.fsPath,
# CHAT_REPLY          accessToken: this.accessToken,
# CHAT_REPLY      })
# CHAT_REPLY      ```
# CHAT_REPLY    - **Feature Computation**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      service.request('context-ranking/compute-features', {
# CHAT_REPLY          repoPath: repoDir.fsPath,
# CHAT_REPLY      })
# CHAT_REPLY      ```
# CHAT_REPLY    - **Context Item Ranking**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      service.request('context-ranking/rank-items', {
# CHAT_REPLY          repoPath: repoUri.path,
# CHAT_REPLY          contextItems: rankItems,
# CHAT_REPLY          query: query.toString(),
# CHAT_REPLY      })
# CHAT_REPLY      ```
# CHAT_REPLY 
# CHAT_REPLY 2. **Embedding-Based Context Ranking**:
# CHAT_REPLY    - **Embedding Retrieval**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      service.request('context-ranking/context-retriever-embedding', {
# CHAT_REPLY          repoPath: repoUri.path,
# CHAT_REPLY          query: query.toString(),
# CHAT_REPLY          modelName: modelName,
# CHAT_REPLY          numResults: numResults,
# CHAT_REPLY      })
# CHAT_REPLY      ```
# CHAT_REPLY    - **Precomputation of Embeddings**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      service.request('context-ranking/precompute-query-embedding', {
# CHAT_REPLY          query: query.toString(),
# CHAT_REPLY      })
# CHAT_REPLY      ```
# CHAT_REPLY    - **Model-Specific Embeddings Search**:
# CHAT_REPLY      ```typescript
# CHAT_REPLY      const modelName = 'sentence-transformers/multi-qa-mpnet-base-dot-v1'
# CHAT_REPLY      const embeddingsResults = await this.retrieveEmbeddingBasedContext(
# CHAT_REPLY          text,
# CHAT_REPLY          numResults,
# CHAT_REPLY          modelName
# CHAT_REPLY      )
# CHAT_REPLY      ```
# CHAT_REPLY 
# CHAT_REPLY These context ranking logics allow Cody to rank and retrieve relevant context items efficiently, enhancing the overall user experience by providing more accurate and relevant suggestions.

# CONTEXT_ITEMS [{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/local-context/context-ranking.tsL0-313"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/jsonrpc/context-ranking-protocol.tsL0-56"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/walkthroughs/keyboard.mdL0-19"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL985-1005"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/doc/dev/quality/index.mdL0-16"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/package.jsonL940-962"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/experimentation/FeatureFlagProvider.tsL34-54"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL151-166"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL1123-1136"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL0-24"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/package.jsonL1050-1068"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/doc/keyboard.mdL0-18"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/commands/types.tsL0-32"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/package.jsonL909-940"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/package.jsonL993-1016"}]

 class: Gather information
