 question: Where do we determine whether to use enhanced context for chat?
# CHAT
# CHAT_QUESTION Where do we determine whether to use enhanced context for chat?

# CHAT_REPLY The determination of whether to use enhanced context for chat is primarily handled in the `getEnhancedContext` function within the `cody_test/vscode/src/chat/chat-view/context.ts` file. Here's a summary of how it works:
# CHAT_REPLY 
# CHAT_REPLY 1. **Strategy Check**: The function checks the `strategy` parameter to decide how to gather context.
# CHAT_REPLY    ```typescript
# CHAT_REPLY    if (strategy === 'none') {
# CHAT_REPLY        logDebug('SimpleChatPanelProvider', 'getEnhancedContext > none')
# CHAT_REPLY        return getVisibleEditorContext(editor)
# CHAT_REPLY    }
# CHAT_REPLY    ```
# CHAT_REPLY 
# CHAT_REPLY 2. **Embeddings Context**: If the strategy is not 'keyword', it retrieves embeddings context.
# CHAT_REPLY    ```typescript
# CHAT_REPLY    const embeddingsContextItemsPromise =
# CHAT_REPLY        strategy !== 'keyword'
# CHAT_REPLY            ? retrieveContextGracefully(
# CHAT_REPLY                  searchEmbeddingsLocal(providers.localEmbeddings, text),
# CHAT_REPLY                  'local-embeddings'
# CHAT_REPLY              )
# CHAT_REPLY            : []
# CHAT_REPLY    ```
# CHAT_REPLY 
# CHAT_REPLY 3. **Search Context**: If the strategy is not 'embeddings', it retrieves search context from remote and local sources.
# CHAT_REPLY    ```typescript
# CHAT_REPLY    const remoteSearchContextItemsPromise =
# CHAT_REPLY        providers.remoteSearch && strategy !== 'embeddings'
# CHAT_REPLY            ? await retrieveContextGracefully(
# CHAT_REPLY                  searchRemote(providers.remoteSearch, text),
# CHAT_REPLY                  'remote-search'
# CHAT_REPLY              )
# CHAT_REPLY            : []
# CHAT_REPLY    const localSearchContextItemsPromise =
# CHAT_REPLY        providers.symf && strategy !== 'embeddings'
# CHAT_REPLY            ? retrieveContextGracefully(searchSymf(providers.symf, editor, text), 'symf')
# CHAT_REPLY            : []
# CHAT_REPLY    ```
# CHAT_REPLY 
# CHAT_REPLY 4. **Combining Context**: It combines all the gathered context sources.
# CHAT_REPLY    ```typescript
# CHAT_REPLY    const searchContext = [
# CHAT_REPLY        ...(await embeddingsContextItemsPromise),
# CHAT_REPLY        ...(await remoteSearchContextItemsPromise),
# CHAT_REPLY        ...(await localSearchContextItemsPromise),
# CHAT_REPLY    ]
# CHAT_REPLY    ```
# CHAT_REPLY 
# CHAT_REPLY 5. **Priority Context**: It gets priority context and combines it with the search context.
# CHAT_REPLY    ```typescript
# CHAT_REPLY    const priorityContext = await getPriorityContext(text, editor, searchContext)
# CHAT_REPLY    return priorityContext.concat(searchContext)
# CHAT_REPLY    ```
# CHAT_REPLY 
# CHAT_REPLY Additionally, the `getEnhancedContextFromRanker` function is used when `contextRanking` is provided, which also gathers and ranks context items based on various sources.
# CHAT_REPLY 
# CHAT_REPLY In summary, the decision to use enhanced context is based on the `strategy` parameter and the availability of context providers (like embeddings, symf, and remote search). The context is then gathered, combined, and optionally ranked before being returned.

# CONTEXT_ITEMS [{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/completions/can-use-partial-completion.tsL0-41"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/promptEditor/plugins/atMentions/chatContextClient.tsxL51-53"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/promptEditor/plugins/atMentions/chatContextClient.tsxL56-108"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/mocked/enhanced_context/squirrel.tsL0-11"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/mocked/enhanced_context/animal.tsL0-5"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/mocked/enhanced_context/README.mdL0-5"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/Components/EnhancedContextSettings.tsxL67-69"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/chat/chat-view/context.tsL24-35"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/chat/chat-view/context.tsL94-157"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/chat/chat-view/context.tsL36-92"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/chat/models/chatModelContext.tsxL13-15"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/Components/EnhancedContextSettings.tsxL63-65"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/local-context/enhanced-context-status.test.tsL0-150"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/local-context/enhanced-context-status.tsL0-158"},{"source":"search","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/chat/EnhancedContext.tsxL4-6"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/token/counter.tsL26-43"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/editor/active-editor.tsL0-26"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/chat/chat-view/prompt.tsL98-116"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/test/e2e/local-embeddings.test.tsL140-164"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/src/chat/chat-view/context.tsL32-64"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL682-694"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/doc/dev/quality/index.mdL16-32"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/codebase-context/messages.tsL88-121"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/test/e2e/context-settings.test.tsL24-43"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/codebase-context/messages.tsL38-88"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/TESTING.mdL270-287"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/CHANGELOG.mdL377-385"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/webviews/Chat.tsxL64-89"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/vscode/test/e2e/common.tsL50-74"},{"source":"embeddings","file":"/Users/jan/repos/cody-leaderboard/input/chat-context/cody_test/lib/shared/src/token/constants.tsL0-40"}]

 class: Find logic
