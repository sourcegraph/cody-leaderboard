LANGUAGEID,WORKSPACE,FIXTURE,STRATEGY,FILEPATH,REVISION,MULTILINE,COMPLETION_INTENT,AUTOCOMPLETE_KIND,RANGE_START_LINE,RANGE_START_CHARACTER,RANGE_END_LINE,RANGE_END_CHARACTER,RESULT_TIMEOUT,RESULT_ERROR,RESULT_EMPTY,RESULT_EXACT,RESULT_TYPECHECKS,RESULT_PARSES,RESULT_TEXT,RESULT_CHAR_COUNT,RESULT_NON_INSERT_PATCH,EDIT_DIFF,CHAT_REPLY,CHAT_QUESTION,FIX_AFTER_DIAGNOSTIC,FIX_BEFORE_DIAGNOSTIC,LLM_JUDGE_SCORE,LLM_JUDGE_REASONING,CONCISENESS_SCORE,HEDGES,PROVIDER_IDENTIFIER,PROVIDER_MODEL,STOP_REASON,CONTEXT_BFG_RETRIEVED_COUNT,CONTEXT_BFG_SUGGESTED_COUNT,CONTEXT_BFG_DURATION_MS,EVENT,TEST_FILE,TEST_EXPECTED_FILE,TEST_GENERATED,TEST_MATCHES_EXPECTED_TEST_FILE,TEST_HAS_TYPESCRIPT_ERRORS,TEST_USED_EXPECTED_TEST_FRAMEWORK,TEST_USED_CORRECT_APPEND_OPERATION,TEST_INPUT_FILE,TEST_LANGUAGE,TEST_NAME,TEST_DIAGNOSTICS
yaml,code_009,claude-3-sonnet,unit-test,test.yaml,511244a2b35df2b185707afe4a78865d4a3d194d,,,,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,zoekt/score_test.go,zoekt/score_test.go,"import (
	""testing""
)

func TestScoreFilesUsingBM25(t *testing.T) {
	d := &indexData{
		boundaries: []uint32{0, 100, 200, 300},
	}

	fileMatches := []FileMatch{
		{},
		{},
		{},
	}

	tfs := []termFrequency{
		{doc: 0, tf: map[string]int{""term1"": 5, ""term2"": 2}},
		{doc: 1, tf: map[string]int{""term1"": 3, ""term2"": 1}},
		{doc: 2, tf: map[string]int{""term1"": 1, ""term2"": 4}},
	}

	df := termDocumentFrequency{
		""term1"": 3,
		""term2"": 3,
	}

	opts := &SearchOptions{
		DebugScore: false,
	}

	d.scoreFilesUsingBM25(fileMatches, tfs, df, opts)

	// Check if scores are calculated correctly
	if fileMatches[0].Score == 0 || fileMatches[1].Score == 0 || fileMatches[2].Score == 0 {
		t.Errorf(""Scores not calculated correctly"")
	}

	// Test with empty tfs
	d.scoreFilesUsingBM25(fileMatches, []termFrequency{}, df, opts)

	// Test with empty df
	d.scoreFilesUsingBM25(fileMatches, tfs, termDocumentFrequency{}, opts)

	// Test with DebugScore enabled
	opts.DebugScore = true
	d.scoreFilesUsingBM25(fileMatches, tfs, df, opts)
	for _, fm := range fileMatches {
		if fm.Debug == """" {
			t.Errorf(""Debug score not set when DebugScore is enabled"")
		}
	}
}
",true,false,true,,zoekt/score.go,go,Zoekt BM25 scoring,
